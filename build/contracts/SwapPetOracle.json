{
  "contractName": "SwapPetOracle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracle_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapper_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "swapper_",
          "type": "address"
        }
      ],
      "name": "setSwapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "base_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quote_",
          "type": "address"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn_",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote_\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapper_\",\"type\":\"address\"}],\"name\":\"setSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn_\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Swap.Pet@pm.me \",\"details\":\"price on base/quote, swapper for exchange between base and quote. \",\"kind\":\"dev\",\"methods\":{},\"title\":\"basic price Oracle of Swap.Pet.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"price(address,address)\":{\"notice\":\"the price(scaled by 1e18) of base_/quote_.\"},\"swap(address,address,uint256)\":{\"notice\":\"swap Check amountIn_ tokenIn_ to amountOut_ tokenOut_.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/sdc1/GitClient/swappet/oracle/contracts/SwapPetOracle.sol\":\"SwapPetOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"/media/sdc1/GitClient/swappet/oracle/contracts/SwapPetOracle.sol\":{\"keccak256\":\"0xb9d15162858873ae3a3e984a196819aa483f41ed6723581a7eed43c4bd251e2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://42a6753e5e7766e0b27fd8916013d0618721e97b7e8f1c4decc7e0efa128dda0\",\"dweb:/ipfs/QmVvQHkUWQbzm1fQJKb3dFu6sJqHsuwCTaaTA9RA9Eq1Dm\"]},\"hardhat/console.sol\":{\"keccak256\":\"0xd3f9eb69241af8de5174a6cfa3da3cbc94e351dee495002d8675b665865ba417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68d7929eff6d6b56882da604050b60b25d0281b4b4e0333a196868e8dc89b1b5\",\"dweb:/ipfs/QmeWYGyN2DxpFLH4KMMuTGQAHZrkQBaMTotrEJnEHLApuk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109803803806109808339818101604052604081101561003357600080fd5b508051602091820151604080518082019091528381527f4465706c6f79696e672061204f7261636c65207769746820737761707065723a81850152919290916100859183906102be6100b6821b17901c565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055610197565b61017282826040516024018080602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561010a5781810151838201526020016100f2565b50505050905090810190601f1680156101375780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0390811663319af33360e01b179091529094506101761692505050565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6107da806101a66000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637dc0d1d0116100505780637dc0d1d0146100ea5780639c82f2a4146100f2578063df791e501461012757610067565b80632b00490d1461006c5780632b3297f9146100b9575b600080fd5b6100a76004803603604081101561008257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661016a565b60408051918252519081900360200190f35b6100c16101b7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100c16101d3565b6101256004803603602081101561010857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ef565b005b6100a76004803603606081101561013d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610271565b60006101ae6040518060400160405280601981526020017f7072696365206f662027257327202f20272573273a27256927000000000000008152508484600a6103d2565b50600a92915050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b61022a6040518060600160405280602281526020016107836022913960015473ffffffffffffffffffffffffffffffffffffffff168361050e565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051808201909152601b81527f7377617020272573272066726f6d202725692720746f202725692700000000006020820152607b906102b490858484610641565b50607b9392505050565b6103ce828260405160240180806020018373ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561031f578181015183820152602001610307565b50505050905090810190601f16801561034c5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af33300000000000000000000000000000000000000000000000000000000179052935061076192505050565b5050565b6105088484848460405160240180806020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561045757818101518382015260200161043f565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6eb7943d000000000000000000000000000000000000000000000000000000001790529550610761945050505050565b50505050565b61063c83838360405160240180806020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b8381101561058c578181015183820152602001610574565b50505050905090810190601f1680156105b95780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ffcec75e00000000000000000000000000000000000000000000000000000000017905294506107619350505050565b505050565b6105088484848460405160240180806020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156106b0578181015183820152602001610698565b50505050905090810190601f1680156106dd5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdaa394bd000000000000000000000000000000000000000000000000000000001790529550610761945050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa505050505056fe4368616e67696e6720737761707065722066726f6d202725732720746f2027257327a264697066735822122093605c9a6b965b58a89175f6b6f681c81c5ac2b8b7ecb561326ebe8bd95087c764736f6c63430007000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80637dc0d1d0116100505780637dc0d1d0146100ea5780639c82f2a4146100f2578063df791e501461012757610067565b80632b00490d1461006c5780632b3297f9146100b9575b600080fd5b6100a76004803603604081101561008257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661016a565b60408051918252519081900360200190f35b6100c16101b7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100c16101d3565b6101256004803603602081101561010857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ef565b005b6100a76004803603606081101561013d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610271565b60006101ae6040518060400160405280601981526020017f7072696365206f662027257327202f20272573273a27256927000000000000008152508484600a6103d2565b50600a92915050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b61022a6040518060600160405280602281526020016107836022913960015473ffffffffffffffffffffffffffffffffffffffff168361050e565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60408051808201909152601b81527f7377617020272573272066726f6d202725692720746f202725692700000000006020820152607b906102b490858484610641565b50607b9392505050565b6103ce828260405160240180806020018373ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561031f578181015183820152602001610307565b50505050905090810190601f16801561034c5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af33300000000000000000000000000000000000000000000000000000000179052935061076192505050565b5050565b6105088484848460405160240180806020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561045757818101518382015260200161043f565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6eb7943d000000000000000000000000000000000000000000000000000000001790529550610761945050505050565b50505050565b61063c83838360405160240180806020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b8381101561058c578181015183820152602001610574565b50505050905090810190601f1680156105b95780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ffcec75e00000000000000000000000000000000000000000000000000000000017905294506107619350505050565b505050565b6105088484848460405160240180806020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156106b0578181015183820152602001610698565b50505050905090810190601f1680156106dd5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdaa394bd000000000000000000000000000000000000000000000000000000001790529550610761945050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa505050505056fe4368616e67696e6720737761707065722066726f6d202725732720746f2027257327a264697066735822122093605c9a6b965b58a89175f6b6f681c81c5ac2b8b7ecb561326ebe8bd95087c764736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "369:1132:1:-:0;;;455:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:181:1;;;;;;;;518:57;;;;;;;;;;;;;;;;455:181;;;;518:57;;455:181;;518:11;;;;;:57;;:::i;:::-;585:6;:16;;-1:-1:-1;;;;;585:16:1;;;-1:-1:-1;;;;;;585:16:1;;;;;;;;611:18;;;;;;;;;;;369:1132;;6406:136:3;6467:71;6530:2;6534;6483:54;;;;;;;;;-1:-1:-1;;;;;6483:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6483:54:3;;;-1:-1:-1;;6483:54:3;;;;;;;;;;;;;;-1:-1:-1;;;;;6483:54:3;;;-1:-1:-1;;;6483:54:3;;;;;;-1:-1:-1;6467:15:3;:71;;-1:-1:-1;;;6467:71:3:i;:::-;6406:136;;:::o;176:288::-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;;:::o;369:1132:1:-;;;;;;;",
  "deployedSourceMap": "369:1132:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:170;;;;;;;;;;;;;;;;-1:-1:-1;935:170:1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;426:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;399:21;;;:::i;643:158::-;;;;;;;;;;;;;;;;-1:-1:-1;643:158:1;;;;:::i;:::-;;1255:244;;;;;;;;;;;;;;;;-1:-1:-1;1255:244:1;;;;;;;;;;;;;;;;;;:::i;935:170::-;1003:7;1021:58;;;;;;;;;;;;;;;;;;1062:5;1069:6;1076:2;1021:11;:58::i;:::-;-1:-1:-1;1096:2:1;935:170;;;;:::o;426:22::-;;;;;;:::o;399:21::-;;;;;;:::o;643:158::-;698:68;;;;;;;;;;;;;;;;;;748:7;;;;757:8;698:11;:68::i;:::-;776:7;:18;;;;;;;;;;;;;;;643:158::o;1255:244::-;1396:75;;;;;;;;;;;;;;;;;1383:3;;1396:75;;1439:8;1449:9;1383:3;1396:11;:75::i;:::-;-1:-1:-1;1489:3:1;1255:244;;;;;:::o;6406:136:3:-;6467:71;6530:2;6534;6483:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6483:54:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6467:15:3;;-1:-1:-1;;;6467:71:3:i;:::-;6406:136;;:::o;39174:178::-;39256:92;39332:2;39336;39340;39344;39272:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39272:75:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39256:15:3;;-1:-1:-1;;;;;39256:92:3:i;:::-;39174:178;;;;:::o;12344:160::-;12417:83;12488:2;12492;12496;12433:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12433:66:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12417:15:3;;-1:-1:-1;;;;12417:83:3:i;:::-;12344:160;;;:::o;36979:172::-;37058:89;37131:2;37135;37139;37143;37074:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37074:72:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37058:15:3;;-1:-1:-1;;;;;37058:89:3:i;176:288::-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;;:::o",
  "source": "// SPDX-License-Identifier: Apache-2.0\n// Copyright 2020 Swap.Pet@pm.me\n// contracts/interfaces/SwapPetOracle.sol\npragma solidity ^0.7.0; \n\n// import \"@nomiclabs/buidler/console.sol\";\nimport \"hardhat/console.sol\";\n\n/// @title   basic price Oracle of Swap.Pet.\n/// @author  Swap.Pet@pm.me \n/// @dev     price on base/quote, swapper for exchange between base and quote. \ncontract SwapPetOracle { \n    address public oracle;\n    address public swapper;\n\n    constructor(address oracle_,address swapper_) public {\n        console.log(\"Deploying a Oracle with swapper:\", swapper_);\n        oracle = oracle_;\n        swapper = swapper_;\n    } \n\n    function setSwapper(address swapper_) public {\n        console.log(\"Changing swapper from '%s' to '%s'\", swapper, swapper_);\n        swapper = swapper_;\n    }\n    /// @notice the price(scaled by 1e18) of base_/quote_.\n    // / @returns return 0 if false or not support the base_/quote_. \n    function price(address base_,address quote_) external view returns (uint256){\n        console.log(\"price of '%s' / '%s':'%i'\", base_, quote_,10);\n        return 10;\n    }\n\n    /// @notice swap Check amountIn_ tokenIn_ to amountOut_ tokenOut_.\n    // / @returns 0 with do nothing or do not support base_/quote_ swap.\n    function swap(address tokenIn_,address tokenOut_,uint256 amountIn_) external returns (uint256 amountOut_){\n        amountOut_ = 123;\n        console.log(\"swap '%s' from '%i' to '%i'\", tokenIn_, amountIn_, amountOut_); \n        return 123;\n    }\n}\n",
  "sourcePath": "/media/sdc1/GitClient/swappet/oracle/contracts/SwapPetOracle.sol",
  "ast": {
    "absolutePath": "/media/sdc1/GitClient/swappet/oracle/contracts/SwapPetOracle.sol",
    "exportedSymbols": {
      "SwapPetOracle": [
        132
      ]
    },
    "id": 133,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "114:23:1"
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 133,
        "sourceUnit": 8237,
        "src": "184:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36,
          "nodeType": "StructuredDocumentation",
          "src": "215:154:1",
          "text": "@title   basic price Oracle of Swap.Pet.\n @author  Swap.Pet@pm.me \n @dev     price on base/quote, swapper for exchange between base and quote. "
        },
        "fullyImplemented": true,
        "id": 132,
        "linearizedBaseContracts": [
          132
        ],
        "name": "SwapPetOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 38,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 132,
            "src": "399:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b3297f9",
            "id": 40,
            "mutability": "mutable",
            "name": "swapper",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 132,
            "src": "426:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "426:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "508:128:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706c6f79696e672061204f7261636c65207769746820737761707065723a",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "530:34:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2842774d8a6a0824dcf42b04a937a56835605ee0d8b90f255e19a62a9a68e4f",
                          "typeString": "literal_string \"Deploying a Oracle with swapper:\""
                        },
                        "value": "Deploying a Oracle with swapper:"
                      },
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "swapper_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "566:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e2842774d8a6a0824dcf42b04a937a56835605ee0d8b90f255e19a62a9a68e4f",
                          "typeString": "literal_string \"Deploying a Oracle with swapper:\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "518:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "518:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "518:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "585:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "oracle_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "594:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "585:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "585:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "swapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "611:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "swapper_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "621:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 63,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "oracle_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "467:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "swapper_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "483:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "466:34:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:1"
            },
            "scope": 132,
            "src": "455:181:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "688:113:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4368616e67696e6720737761707065722066726f6d202725732720746f2027257327",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "710:36:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_145fba706e58d9f338781a0405b72b05a4e00fe57dd1a8bca1a885fc2ce8dda5",
                          "typeString": "literal_string \"Changing swapper from '%s' to '%s'\""
                        },
                        "value": "Changing swapper from '%s' to '%s'"
                      },
                      {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "swapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "748:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "swapper_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "757:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_145fba706e58d9f338781a0405b72b05a4e00fe57dd1a8bca1a885fc2ce8dda5",
                          "typeString": "literal_string \"Changing swapper from '%s' to '%s'\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "698:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1707,
                      "src": "698:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address) view"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "698:68:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "swapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "776:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 77,
                      "name": "swapper_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "786:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "776:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "776:18:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9c82f2a4",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapper",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "swapper_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 81,
                  "src": "663:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "662:18:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:1"
            },
            "scope": 132,
            "src": "643:158:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1011:94:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7072696365206f662027257327202f20272573273a27256927",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1033:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_332ff18cf0d78a546fdd4916bfdd5acda4e5a8531bafa5d90f8917dc3462ebda",
                          "typeString": "literal_string \"price of '%s' / '%s':'%i'\""
                        },
                        "value": "price of '%s' / '%s':'%i'"
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "base_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1062:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "quote_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1069:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1076:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_332ff18cf0d78a546fdd4916bfdd5acda4e5a8531bafa5d90f8917dc3462ebda",
                          "typeString": "literal_string \"price of '%s' / '%s':'%i'\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "1021:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5222,
                      "src": "1021:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,address,uint256) view"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1096:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "functionReturnParameters": 90,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1089:9:1"
                }
              ]
            },
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "806:54:1",
              "text": "@notice the price(scaled by 1e18) of base_/quote_."
            },
            "functionSelector": "2b00490d",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "base_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "950:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "quote_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "964:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "949:30:1"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "1003:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:9:1"
            },
            "scope": 132,
            "src": "935:170:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1360:139:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "amountOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "1370:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313233",
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1383:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_123_by_1",
                        "typeString": "int_const 123"
                      },
                      "value": "123"
                    },
                    "src": "1370:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7377617020272573272066726f6d202725692720746f2027256927",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1408:29:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_919b66824624c1096d3ce6facc12efafb71d4564e2429432d14ff934e1d4839d",
                          "typeString": "literal_string \"swap '%s' from '%i' to '%i'\""
                        },
                        "value": "swap '%s' from '%i' to '%i'"
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "tokenIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1439:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "amountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "1449:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "amountOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1460:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_919b66824624c1096d3ce6facc12efafb71d4564e2429432d14ff934e1d4839d",
                          "typeString": "literal_string \"swap '%s' from '%i' to '%i'\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "1396:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4946,
                      "src": "1396:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256,uint256) view"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "313233",
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1489:3:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_123_by_1",
                      "typeString": "int_const 123"
                    },
                    "value": "123"
                  },
                  "functionReturnParameters": 114,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1482:10:1"
                }
              ]
            },
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "1111:66:1",
              "text": "@notice swap Check amountIn_ tokenIn_ to amountOut_ tokenOut_."
            },
            "functionSelector": "df791e50",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "tokenIn_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1269:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1286:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "amountIn_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1304:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1268:54:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "amountOut_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1341:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1340:20:1"
            },
            "scope": 132,
            "src": "1255:244:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 133,
        "src": "369:1132:1"
      }
    ],
    "src": "114:1388:1"
  },
  "legacyAST": {
    "absolutePath": "/media/sdc1/GitClient/swappet/oracle/contracts/SwapPetOracle.sol",
    "exportedSymbols": {
      "SwapPetOracle": [
        132
      ]
    },
    "id": 133,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "114:23:1"
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 133,
        "sourceUnit": 8237,
        "src": "184:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36,
          "nodeType": "StructuredDocumentation",
          "src": "215:154:1",
          "text": "@title   basic price Oracle of Swap.Pet.\n @author  Swap.Pet@pm.me \n @dev     price on base/quote, swapper for exchange between base and quote. "
        },
        "fullyImplemented": true,
        "id": 132,
        "linearizedBaseContracts": [
          132
        ],
        "name": "SwapPetOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 38,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 132,
            "src": "399:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b3297f9",
            "id": 40,
            "mutability": "mutable",
            "name": "swapper",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 132,
            "src": "426:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "426:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "508:128:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706c6f79696e672061204f7261636c65207769746820737761707065723a",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "530:34:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2842774d8a6a0824dcf42b04a937a56835605ee0d8b90f255e19a62a9a68e4f",
                          "typeString": "literal_string \"Deploying a Oracle with swapper:\""
                        },
                        "value": "Deploying a Oracle with swapper:"
                      },
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "swapper_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "566:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e2842774d8a6a0824dcf42b04a937a56835605ee0d8b90f255e19a62a9a68e4f",
                          "typeString": "literal_string \"Deploying a Oracle with swapper:\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "518:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "518:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "518:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "585:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "oracle_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "594:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "585:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "585:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "swapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "611:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "swapper_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "621:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "611:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "611:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 63,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "oracle_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "467:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "swapper_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 63,
                  "src": "483:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "466:34:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:1"
            },
            "scope": 132,
            "src": "455:181:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "688:113:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4368616e67696e6720737761707065722066726f6d202725732720746f2027257327",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "710:36:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_145fba706e58d9f338781a0405b72b05a4e00fe57dd1a8bca1a885fc2ce8dda5",
                          "typeString": "literal_string \"Changing swapper from '%s' to '%s'\""
                        },
                        "value": "Changing swapper from '%s' to '%s'"
                      },
                      {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "swapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "748:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "swapper_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "757:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_145fba706e58d9f338781a0405b72b05a4e00fe57dd1a8bca1a885fc2ce8dda5",
                          "typeString": "literal_string \"Changing swapper from '%s' to '%s'\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "698:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1707,
                      "src": "698:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address) view"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "698:68:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "swapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "776:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 77,
                      "name": "swapper_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "786:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "776:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "776:18:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9c82f2a4",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapper",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "swapper_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 81,
                  "src": "663:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "662:18:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:1"
            },
            "scope": 132,
            "src": "643:158:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1011:94:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7072696365206f662027257327202f20272573273a27256927",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1033:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_332ff18cf0d78a546fdd4916bfdd5acda4e5a8531bafa5d90f8917dc3462ebda",
                          "typeString": "literal_string \"price of '%s' / '%s':'%i'\""
                        },
                        "value": "price of '%s' / '%s':'%i'"
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "base_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1062:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "quote_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1069:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1076:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_332ff18cf0d78a546fdd4916bfdd5acda4e5a8531bafa5d90f8917dc3462ebda",
                          "typeString": "literal_string \"price of '%s' / '%s':'%i'\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "1021:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5222,
                      "src": "1021:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,address,uint256) view"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1096:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "functionReturnParameters": 90,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1089:9:1"
                }
              ]
            },
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "806:54:1",
              "text": "@notice the price(scaled by 1e18) of base_/quote_."
            },
            "functionSelector": "2b00490d",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "base_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "950:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "quote_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "964:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "949:30:1"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "1003:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:9:1"
            },
            "scope": 132,
            "src": "935:170:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1360:139:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "amountOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "1370:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313233",
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1383:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_123_by_1",
                        "typeString": "int_const 123"
                      },
                      "value": "123"
                    },
                    "src": "1370:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7377617020272573272066726f6d202725692720746f2027256927",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1408:29:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_919b66824624c1096d3ce6facc12efafb71d4564e2429432d14ff934e1d4839d",
                          "typeString": "literal_string \"swap '%s' from '%i' to '%i'\""
                        },
                        "value": "swap '%s' from '%i' to '%i'"
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "tokenIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1439:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "amountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "1449:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "amountOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1460:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_919b66824624c1096d3ce6facc12efafb71d4564e2429432d14ff934e1d4839d",
                          "typeString": "literal_string \"swap '%s' from '%i' to '%i'\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "1396:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8236_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4946,
                      "src": "1396:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256,uint256) view"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "313233",
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1489:3:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_123_by_1",
                      "typeString": "int_const 123"
                    },
                    "value": "123"
                  },
                  "functionReturnParameters": 114,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1482:10:1"
                }
              ]
            },
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "1111:66:1",
              "text": "@notice swap Check amountIn_ tokenIn_ to amountOut_ tokenOut_."
            },
            "functionSelector": "df791e50",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "tokenIn_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1269:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1286:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "amountIn_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1304:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1268:54:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "amountOut_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "1341:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1340:20:1"
            },
            "scope": 132,
            "src": "1255:244:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 133,
        "src": "369:1132:1"
      }
    ],
    "src": "114:1388:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-10-30T05:38:32.413Z",
  "devdoc": {
    "author": "Swap.Pet@pm.me ",
    "details": "price on base/quote, swapper for exchange between base and quote. ",
    "kind": "dev",
    "methods": {},
    "title": "basic price Oracle of Swap.Pet.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "price(address,address)": {
        "notice": "the price(scaled by 1e18) of base_/quote_."
      },
      "swap(address,address,uint256)": {
        "notice": "swap Check amountIn_ tokenIn_ to amountOut_ tokenOut_."
      }
    },
    "version": 1
  }
}